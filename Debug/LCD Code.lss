
LCD Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00000df6  00000e8a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000df6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800120  00800120  00000eaa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000eaa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000edc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00000f1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e8c  00000000  00000000  00001034  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a88  00000000  00000000  00002ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ad4  00000000  00000000  00003948  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004c8  00000000  00000000  0000441c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006cb  00000000  00000000  000048e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001cd0  00000000  00000000  00004faf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00006c7f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__ctors_end>
   4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
   8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
   c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  10:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  14:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  18:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  1c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  20:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  24:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  28:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  2c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  30:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  34:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  38:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  3c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  40:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  44:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  48:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  4c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  50:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  54:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  58:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  5c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  60:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
  64:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>

00000068 <FONTS>:
  68:	00 00 00 00 00 81 81 18 81 81 00 07 00 07 00 14     ................
  78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
  a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
  c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
  d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
  e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
  f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
 108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
 118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
 198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
 1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 1f8:	7c 14 14 14 08 08 14 14 14 7c 7c 08 04 04 08 48     |........||....H
 208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <INIT_ST7735B>:
 248:	05 00 96 01 00 c8 11 01 0a 3a 05 01 00 36 a0 00     .........:...6..
 258:	c8 29                                               .)

0000025a <__ctors_end>:
 25a:	11 24       	eor	r1, r1
 25c:	1f be       	out	0x3f, r1	; 63
 25e:	cf ef       	ldi	r28, 0xFF	; 255
 260:	d8 e0       	ldi	r29, 0x08	; 8
 262:	de bf       	out	0x3e, r29	; 62
 264:	cd bf       	out	0x3d, r28	; 61

00000266 <__do_copy_data>:
 266:	11 e0       	ldi	r17, 0x01	; 1
 268:	a0 e0       	ldi	r26, 0x00	; 0
 26a:	b1 e0       	ldi	r27, 0x01	; 1
 26c:	e6 ef       	ldi	r30, 0xF6	; 246
 26e:	fd e0       	ldi	r31, 0x0D	; 13
 270:	02 c0       	rjmp	.+4      	; 0x276 <__do_copy_data+0x10>
 272:	05 90       	lpm	r0, Z+
 274:	0d 92       	st	X+, r0
 276:	a0 32       	cpi	r26, 0x20	; 32
 278:	b1 07       	cpc	r27, r17
 27a:	d9 f7       	brne	.-10     	; 0x272 <__do_copy_data+0xc>

0000027c <__do_clear_bss>:
 27c:	21 e0       	ldi	r18, 0x01	; 1
 27e:	a0 e2       	ldi	r26, 0x20	; 32
 280:	b1 e0       	ldi	r27, 0x01	; 1
 282:	01 c0       	rjmp	.+2      	; 0x286 <.do_clear_bss_start>

00000284 <.do_clear_bss_loop>:
 284:	1d 92       	st	X+, r1

00000286 <.do_clear_bss_start>:
 286:	a4 32       	cpi	r26, 0x24	; 36
 288:	b2 07       	cpc	r27, r18
 28a:	e1 f7       	brne	.-8      	; 0x284 <.do_clear_bss_loop>
 28c:	0e 94 8b 06 	call	0xd16	; 0xd16 <main>
 290:	0c 94 f9 06 	jmp	0xdf2	; 0xdf2 <_exit>

00000294 <__bad_interrupt>:
 294:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000298 <ST7735_Reset>:
  }
  // set window
  ST7735_SetWindow (lcd, x, x, ys, ye);
  // draw pixel by 565 mode
  ST7735_SendColor565 (lcd, color, ye - ys);
}
 298:	fc 01       	movw	r30, r24
 29a:	a2 81       	ldd	r26, Z+2	; 0x02
 29c:	b3 81       	ldd	r27, Z+3	; 0x03
 29e:	4c 91       	ld	r20, X
 2a0:	21 e0       	ldi	r18, 0x01	; 1
 2a2:	30 e0       	ldi	r19, 0x00	; 0
 2a4:	c9 01       	movw	r24, r18
 2a6:	04 80       	ldd	r0, Z+4	; 0x04
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <ST7735_Reset+0x16>
 2aa:	88 0f       	add	r24, r24
 2ac:	99 1f       	adc	r25, r25
 2ae:	0a 94       	dec	r0
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <ST7735_Reset+0x12>
 2b2:	84 2b       	or	r24, r20
 2b4:	8c 93       	st	X, r24
 2b6:	a0 81       	ld	r26, Z
 2b8:	b1 81       	ldd	r27, Z+1	; 0x01
 2ba:	4c 91       	ld	r20, X
 2bc:	c9 01       	movw	r24, r18
 2be:	04 80       	ldd	r0, Z+4	; 0x04
 2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <ST7735_Reset+0x2e>
 2c2:	88 0f       	add	r24, r24
 2c4:	99 1f       	adc	r25, r25
 2c6:	0a 94       	dec	r0
 2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <ST7735_Reset+0x2a>
 2ca:	84 2b       	or	r24, r20
 2cc:	8c 93       	st	X, r24
 2ce:	8f e4       	ldi	r24, 0x4F	; 79
 2d0:	93 ec       	ldi	r25, 0xC3	; 195
 2d2:	01 97       	sbiw	r24, 0x01	; 1
 2d4:	f1 f7       	brne	.-4      	; 0x2d2 <ST7735_Reset+0x3a>
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <ST7735_Reset+0x40>
 2d8:	00 00       	nop
 2da:	a2 81       	ldd	r26, Z+2	; 0x02
 2dc:	b3 81       	ldd	r27, Z+3	; 0x03
 2de:	9c 91       	ld	r25, X
 2e0:	a9 01       	movw	r20, r18
 2e2:	04 80       	ldd	r0, Z+4	; 0x04
 2e4:	02 c0       	rjmp	.+4      	; 0x2ea <ST7735_Reset+0x52>
 2e6:	44 0f       	add	r20, r20
 2e8:	55 1f       	adc	r21, r21
 2ea:	0a 94       	dec	r0
 2ec:	e2 f7       	brpl	.-8      	; 0x2e6 <ST7735_Reset+0x4e>
 2ee:	84 2f       	mov	r24, r20
 2f0:	80 95       	com	r24
 2f2:	89 23       	and	r24, r25
 2f4:	8c 93       	st	X, r24
 2f6:	8f e4       	ldi	r24, 0x4F	; 79
 2f8:	93 ec       	ldi	r25, 0xC3	; 195
 2fa:	01 97       	sbiw	r24, 0x01	; 1
 2fc:	f1 f7       	brne	.-4      	; 0x2fa <ST7735_Reset+0x62>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <ST7735_Reset+0x68>
 300:	00 00       	nop
 302:	a2 81       	ldd	r26, Z+2	; 0x02
 304:	b3 81       	ldd	r27, Z+3	; 0x03
 306:	8c 91       	ld	r24, X
 308:	04 80       	ldd	r0, Z+4	; 0x04
 30a:	02 c0       	rjmp	.+4      	; 0x310 <ST7735_Reset+0x78>
 30c:	22 0f       	add	r18, r18
 30e:	33 1f       	adc	r19, r19
 310:	0a 94       	dec	r0
 312:	e2 f7       	brpl	.-8      	; 0x30c <ST7735_Reset+0x74>
 314:	28 2b       	or	r18, r24
 316:	2c 93       	st	X, r18
 318:	08 95       	ret

0000031a <ST7735_SPI_Init>:
 31a:	84 b1       	in	r24, 0x04	; 4
 31c:	80 62       	ori	r24, 0x20	; 32
 31e:	84 b9       	out	0x04, r24	; 4
 320:	84 b1       	in	r24, 0x04	; 4
 322:	88 60       	ori	r24, 0x08	; 8
 324:	84 b9       	out	0x04, r24	; 4
 326:	8c b5       	in	r24, 0x2c	; 44
 328:	80 64       	ori	r24, 0x40	; 64
 32a:	8c bd       	out	0x2c, r24	; 44
 32c:	8c b5       	in	r24, 0x2c	; 44
 32e:	80 61       	ori	r24, 0x10	; 16
 330:	8c bd       	out	0x2c, r24	; 44
 332:	8d b5       	in	r24, 0x2d	; 45
 334:	81 60       	ori	r24, 0x01	; 1
 336:	8d bd       	out	0x2d, r24	; 45
 338:	08 95       	ret

0000033a <ST7735_Pins_Init>:
 33a:	cf 93       	push	r28
 33c:	df 93       	push	r29
 33e:	fc 01       	movw	r30, r24
 340:	c0 81       	ld	r28, Z
 342:	d1 81       	ldd	r29, Z+1	; 0x01
 344:	a8 81       	ld	r26, Y
 346:	b9 81       	ldd	r27, Y+1	; 0x01
 348:	4c 91       	ld	r20, X
 34a:	21 e0       	ldi	r18, 0x01	; 1
 34c:	30 e0       	ldi	r19, 0x00	; 0
 34e:	c9 01       	movw	r24, r18
 350:	0c 80       	ldd	r0, Y+4	; 0x04
 352:	02 c0       	rjmp	.+4      	; 0x358 <ST7735_Pins_Init+0x1e>
 354:	88 0f       	add	r24, r24
 356:	99 1f       	adc	r25, r25
 358:	0a 94       	dec	r0
 35a:	e2 f7       	brpl	.-8      	; 0x354 <ST7735_Pins_Init+0x1a>
 35c:	84 2b       	or	r24, r20
 35e:	8c 93       	st	X, r24
 360:	c2 81       	ldd	r28, Z+2	; 0x02
 362:	d3 81       	ldd	r29, Z+3	; 0x03
 364:	a8 81       	ld	r26, Y
 366:	b9 81       	ldd	r27, Y+1	; 0x01
 368:	4c 91       	ld	r20, X
 36a:	c9 01       	movw	r24, r18
 36c:	0c 80       	ldd	r0, Y+4	; 0x04
 36e:	02 c0       	rjmp	.+4      	; 0x374 <ST7735_Pins_Init+0x3a>
 370:	88 0f       	add	r24, r24
 372:	99 1f       	adc	r25, r25
 374:	0a 94       	dec	r0
 376:	e2 f7       	brpl	.-8      	; 0x370 <ST7735_Pins_Init+0x36>
 378:	84 2b       	or	r24, r20
 37a:	8c 93       	st	X, r24
 37c:	c4 81       	ldd	r28, Z+4	; 0x04
 37e:	d5 81       	ldd	r29, Z+5	; 0x05
 380:	a8 81       	ld	r26, Y
 382:	b9 81       	ldd	r27, Y+1	; 0x01
 384:	4c 91       	ld	r20, X
 386:	c9 01       	movw	r24, r18
 388:	0c 80       	ldd	r0, Y+4	; 0x04
 38a:	02 c0       	rjmp	.+4      	; 0x390 <ST7735_Pins_Init+0x56>
 38c:	88 0f       	add	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	0a 94       	dec	r0
 392:	e2 f7       	brpl	.-8      	; 0x38c <ST7735_Pins_Init+0x52>
 394:	84 2b       	or	r24, r20
 396:	8c 93       	st	X, r24
 398:	c0 81       	ld	r28, Z
 39a:	d1 81       	ldd	r29, Z+1	; 0x01
 39c:	aa 81       	ldd	r26, Y+2	; 0x02
 39e:	bb 81       	ldd	r27, Y+3	; 0x03
 3a0:	4c 91       	ld	r20, X
 3a2:	c9 01       	movw	r24, r18
 3a4:	0c 80       	ldd	r0, Y+4	; 0x04
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <ST7735_Pins_Init+0x72>
 3a8:	88 0f       	add	r24, r24
 3aa:	99 1f       	adc	r25, r25
 3ac:	0a 94       	dec	r0
 3ae:	e2 f7       	brpl	.-8      	; 0x3a8 <ST7735_Pins_Init+0x6e>
 3b0:	84 2b       	or	r24, r20
 3b2:	8c 93       	st	X, r24
 3b4:	a2 81       	ldd	r26, Z+2	; 0x02
 3b6:	b3 81       	ldd	r27, Z+3	; 0x03
 3b8:	12 96       	adiw	r26, 0x02	; 2
 3ba:	ed 91       	ld	r30, X+
 3bc:	fc 91       	ld	r31, X
 3be:	13 97       	sbiw	r26, 0x03	; 3
 3c0:	80 81       	ld	r24, Z
 3c2:	14 96       	adiw	r26, 0x04	; 4
 3c4:	0c 90       	ld	r0, X
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <ST7735_Pins_Init+0x92>
 3c8:	22 0f       	add	r18, r18
 3ca:	33 1f       	adc	r19, r19
 3cc:	0a 94       	dec	r0
 3ce:	e2 f7       	brpl	.-8      	; 0x3c8 <ST7735_Pins_Init+0x8e>
 3d0:	28 2b       	or	r18, r24
 3d2:	20 83       	st	Z, r18
 3d4:	df 91       	pop	r29
 3d6:	cf 91       	pop	r28
 3d8:	08 95       	ret

000003da <ST7735_CommandSend>:
 3da:	cf 93       	push	r28
 3dc:	df 93       	push	r29
 3de:	fc 01       	movw	r30, r24
 3e0:	c0 81       	ld	r28, Z
 3e2:	d1 81       	ldd	r29, Z+1	; 0x01
 3e4:	aa 81       	ldd	r26, Y+2	; 0x02
 3e6:	bb 81       	ldd	r27, Y+3	; 0x03
 3e8:	9c 91       	ld	r25, X
 3ea:	21 e0       	ldi	r18, 0x01	; 1
 3ec:	30 e0       	ldi	r19, 0x00	; 0
 3ee:	a9 01       	movw	r20, r18
 3f0:	0c 80       	ldd	r0, Y+4	; 0x04
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <ST7735_CommandSend+0x1e>
 3f4:	44 0f       	add	r20, r20
 3f6:	55 1f       	adc	r21, r21
 3f8:	0a 94       	dec	r0
 3fa:	e2 f7       	brpl	.-8      	; 0x3f4 <ST7735_CommandSend+0x1a>
 3fc:	84 2f       	mov	r24, r20
 3fe:	80 95       	com	r24
 400:	89 23       	and	r24, r25
 402:	8c 93       	st	X, r24
 404:	c4 81       	ldd	r28, Z+4	; 0x04
 406:	d5 81       	ldd	r29, Z+5	; 0x05
 408:	aa 81       	ldd	r26, Y+2	; 0x02
 40a:	bb 81       	ldd	r27, Y+3	; 0x03
 40c:	8c 91       	ld	r24, X
 40e:	0c 80       	ldd	r0, Y+4	; 0x04
 410:	02 c0       	rjmp	.+4      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 412:	22 0f       	add	r18, r18
 414:	33 1f       	adc	r19, r19
 416:	0a 94       	dec	r0
 418:	e2 f7       	brpl	.-8      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 41a:	20 95       	com	r18
 41c:	28 23       	and	r18, r24
 41e:	2c 93       	st	X, r18
 420:	6e bd       	out	0x2e, r22	; 46
 422:	0d b4       	in	r0, 0x2d	; 45
 424:	07 fe       	sbrs	r0, 7
 426:	fd cf       	rjmp	.-6      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 428:	a0 81       	ld	r26, Z
 42a:	b1 81       	ldd	r27, Z+1	; 0x01
 42c:	12 96       	adiw	r26, 0x02	; 2
 42e:	ed 91       	ld	r30, X+
 430:	fc 91       	ld	r31, X
 432:	13 97       	sbiw	r26, 0x03	; 3
 434:	20 81       	ld	r18, Z
 436:	81 e0       	ldi	r24, 0x01	; 1
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	14 96       	adiw	r26, 0x04	; 4
 43c:	0c 90       	ld	r0, X
 43e:	02 c0       	rjmp	.+4      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 440:	88 0f       	add	r24, r24
 442:	99 1f       	adc	r25, r25
 444:	0a 94       	dec	r0
 446:	e2 f7       	brpl	.-8      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 448:	82 2b       	or	r24, r18
 44a:	80 83       	st	Z, r24
 44c:	8e b5       	in	r24, 0x2e	; 46
 44e:	df 91       	pop	r29
 450:	cf 91       	pop	r28
 452:	08 95       	ret

00000454 <ST7735_Data8BitsSend>:
 454:	cf 93       	push	r28
 456:	df 93       	push	r29
 458:	fc 01       	movw	r30, r24
 45a:	c0 81       	ld	r28, Z
 45c:	d1 81       	ldd	r29, Z+1	; 0x01
 45e:	aa 81       	ldd	r26, Y+2	; 0x02
 460:	bb 81       	ldd	r27, Y+3	; 0x03
 462:	9c 91       	ld	r25, X
 464:	21 e0       	ldi	r18, 0x01	; 1
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	a9 01       	movw	r20, r18
 46a:	0c 80       	ldd	r0, Y+4	; 0x04
 46c:	02 c0       	rjmp	.+4      	; 0x472 <ST7735_Data8BitsSend+0x1e>
 46e:	44 0f       	add	r20, r20
 470:	55 1f       	adc	r21, r21
 472:	0a 94       	dec	r0
 474:	e2 f7       	brpl	.-8      	; 0x46e <ST7735_Data8BitsSend+0x1a>
 476:	84 2f       	mov	r24, r20
 478:	80 95       	com	r24
 47a:	89 23       	and	r24, r25
 47c:	8c 93       	st	X, r24
 47e:	c4 81       	ldd	r28, Z+4	; 0x04
 480:	d5 81       	ldd	r29, Z+5	; 0x05
 482:	aa 81       	ldd	r26, Y+2	; 0x02
 484:	bb 81       	ldd	r27, Y+3	; 0x03
 486:	8c 91       	ld	r24, X
 488:	0c 80       	ldd	r0, Y+4	; 0x04
 48a:	02 c0       	rjmp	.+4      	; 0x490 <ST7735_Data8BitsSend+0x3c>
 48c:	22 0f       	add	r18, r18
 48e:	33 1f       	adc	r19, r19
 490:	0a 94       	dec	r0
 492:	e2 f7       	brpl	.-8      	; 0x48c <ST7735_Data8BitsSend+0x38>
 494:	28 2b       	or	r18, r24
 496:	2c 93       	st	X, r18
 498:	6e bd       	out	0x2e, r22	; 46
 49a:	0d b4       	in	r0, 0x2d	; 45
 49c:	07 fe       	sbrs	r0, 7
 49e:	fd cf       	rjmp	.-6      	; 0x49a <ST7735_Data8BitsSend+0x46>
 4a0:	a0 81       	ld	r26, Z
 4a2:	b1 81       	ldd	r27, Z+1	; 0x01
 4a4:	12 96       	adiw	r26, 0x02	; 2
 4a6:	ed 91       	ld	r30, X+
 4a8:	fc 91       	ld	r31, X
 4aa:	13 97       	sbiw	r26, 0x03	; 3
 4ac:	20 81       	ld	r18, Z
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	14 96       	adiw	r26, 0x04	; 4
 4b4:	0c 90       	ld	r0, X
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <ST7735_Data8BitsSend+0x68>
 4b8:	88 0f       	add	r24, r24
 4ba:	99 1f       	adc	r25, r25
 4bc:	0a 94       	dec	r0
 4be:	e2 f7       	brpl	.-8      	; 0x4b8 <ST7735_Data8BitsSend+0x64>
 4c0:	82 2b       	or	r24, r18
 4c2:	80 83       	st	Z, r24
 4c4:	8e b5       	in	r24, 0x2e	; 46
 4c6:	df 91       	pop	r29
 4c8:	cf 91       	pop	r28
 4ca:	08 95       	ret

000004cc <ST7735_Data16BitsSend>:
 4cc:	cf 93       	push	r28
 4ce:	df 93       	push	r29
 4d0:	fc 01       	movw	r30, r24
 4d2:	c0 81       	ld	r28, Z
 4d4:	d1 81       	ldd	r29, Z+1	; 0x01
 4d6:	aa 81       	ldd	r26, Y+2	; 0x02
 4d8:	bb 81       	ldd	r27, Y+3	; 0x03
 4da:	9c 91       	ld	r25, X
 4dc:	21 e0       	ldi	r18, 0x01	; 1
 4de:	30 e0       	ldi	r19, 0x00	; 0
 4e0:	a9 01       	movw	r20, r18
 4e2:	0c 80       	ldd	r0, Y+4	; 0x04
 4e4:	02 c0       	rjmp	.+4      	; 0x4ea <ST7735_Data16BitsSend+0x1e>
 4e6:	44 0f       	add	r20, r20
 4e8:	55 1f       	adc	r21, r21
 4ea:	0a 94       	dec	r0
 4ec:	e2 f7       	brpl	.-8      	; 0x4e6 <ST7735_Data16BitsSend+0x1a>
 4ee:	84 2f       	mov	r24, r20
 4f0:	80 95       	com	r24
 4f2:	89 23       	and	r24, r25
 4f4:	8c 93       	st	X, r24
 4f6:	c4 81       	ldd	r28, Z+4	; 0x04
 4f8:	d5 81       	ldd	r29, Z+5	; 0x05
 4fa:	aa 81       	ldd	r26, Y+2	; 0x02
 4fc:	bb 81       	ldd	r27, Y+3	; 0x03
 4fe:	8c 91       	ld	r24, X
 500:	0c 80       	ldd	r0, Y+4	; 0x04
 502:	02 c0       	rjmp	.+4      	; 0x508 <ST7735_Data16BitsSend+0x3c>
 504:	22 0f       	add	r18, r18
 506:	33 1f       	adc	r19, r19
 508:	0a 94       	dec	r0
 50a:	e2 f7       	brpl	.-8      	; 0x504 <ST7735_Data16BitsSend+0x38>
 50c:	28 2b       	or	r18, r24
 50e:	2c 93       	st	X, r18
 510:	7e bd       	out	0x2e, r23	; 46
 512:	0d b4       	in	r0, 0x2d	; 45
 514:	07 fe       	sbrs	r0, 7
 516:	fd cf       	rjmp	.-6      	; 0x512 <ST7735_Data16BitsSend+0x46>
 518:	6e bd       	out	0x2e, r22	; 46
 51a:	0d b4       	in	r0, 0x2d	; 45
 51c:	07 fe       	sbrs	r0, 7
 51e:	fd cf       	rjmp	.-6      	; 0x51a <ST7735_Data16BitsSend+0x4e>
 520:	a0 81       	ld	r26, Z
 522:	b1 81       	ldd	r27, Z+1	; 0x01
 524:	12 96       	adiw	r26, 0x02	; 2
 526:	ed 91       	ld	r30, X+
 528:	fc 91       	ld	r31, X
 52a:	13 97       	sbiw	r26, 0x03	; 3
 52c:	20 81       	ld	r18, Z
 52e:	81 e0       	ldi	r24, 0x01	; 1
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	14 96       	adiw	r26, 0x04	; 4
 534:	0c 90       	ld	r0, X
 536:	02 c0       	rjmp	.+4      	; 0x53c <ST7735_Data16BitsSend+0x70>
 538:	88 0f       	add	r24, r24
 53a:	99 1f       	adc	r25, r25
 53c:	0a 94       	dec	r0
 53e:	e2 f7       	brpl	.-8      	; 0x538 <ST7735_Data16BitsSend+0x6c>
 540:	82 2b       	or	r24, r18
 542:	80 83       	st	Z, r24
 544:	8e b5       	in	r24, 0x2e	; 46
 546:	df 91       	pop	r29
 548:	cf 91       	pop	r28
 54a:	08 95       	ret

0000054c <ST7735_SetWindow>:
 54c:	ef 92       	push	r14
 54e:	ff 92       	push	r15
 550:	0f 93       	push	r16
 552:	1f 93       	push	r17
 554:	cf 93       	push	r28
 556:	df 93       	push	r29
 558:	46 17       	cp	r20, r22
 55a:	38 f1       	brcs	.+78     	; 0x5aa <ST7735_SetWindow+0x5e>
 55c:	40 3a       	cpi	r20, 0xA0	; 160
 55e:	38 f5       	brcc	.+78     	; 0x5ae <ST7735_SetWindow+0x62>
 560:	02 17       	cp	r16, r18
 562:	38 f1       	brcs	.+78     	; 0x5b2 <ST7735_SetWindow+0x66>
 564:	0e 36       	cpi	r16, 0x6E	; 110
 566:	38 f5       	brcc	.+78     	; 0x5b6 <ST7735_SetWindow+0x6a>
 568:	12 2f       	mov	r17, r18
 56a:	c4 2f       	mov	r28, r20
 56c:	d6 2f       	mov	r29, r22
 56e:	7c 01       	movw	r14, r24
 570:	6a e2       	ldi	r22, 0x2A	; 42
 572:	0e 94 ed 01 	call	0x3da	; 0x3da <ST7735_CommandSend>
 576:	6d 2f       	mov	r22, r29
 578:	70 e0       	ldi	r23, 0x00	; 0
 57a:	c7 01       	movw	r24, r14
 57c:	0e 94 66 02 	call	0x4cc	; 0x4cc <ST7735_Data16BitsSend>
 580:	6c 2f       	mov	r22, r28
 582:	70 e0       	ldi	r23, 0x00	; 0
 584:	c7 01       	movw	r24, r14
 586:	0e 94 66 02 	call	0x4cc	; 0x4cc <ST7735_Data16BitsSend>
 58a:	6b e2       	ldi	r22, 0x2B	; 43
 58c:	c7 01       	movw	r24, r14
 58e:	0e 94 ed 01 	call	0x3da	; 0x3da <ST7735_CommandSend>
 592:	61 2f       	mov	r22, r17
 594:	70 e0       	ldi	r23, 0x00	; 0
 596:	c7 01       	movw	r24, r14
 598:	0e 94 66 02 	call	0x4cc	; 0x4cc <ST7735_Data16BitsSend>
 59c:	60 2f       	mov	r22, r16
 59e:	70 e0       	ldi	r23, 0x00	; 0
 5a0:	c7 01       	movw	r24, r14
 5a2:	0e 94 66 02 	call	0x4cc	; 0x4cc <ST7735_Data16BitsSend>
 5a6:	80 e0       	ldi	r24, 0x00	; 0
 5a8:	07 c0       	rjmp	.+14     	; 0x5b8 <ST7735_SetWindow+0x6c>
 5aa:	81 e0       	ldi	r24, 0x01	; 1
 5ac:	05 c0       	rjmp	.+10     	; 0x5b8 <ST7735_SetWindow+0x6c>
 5ae:	81 e0       	ldi	r24, 0x01	; 1
 5b0:	03 c0       	rjmp	.+6      	; 0x5b8 <ST7735_SetWindow+0x6c>
 5b2:	81 e0       	ldi	r24, 0x01	; 1
 5b4:	01 c0       	rjmp	.+2      	; 0x5b8 <ST7735_SetWindow+0x6c>
 5b6:	81 e0       	ldi	r24, 0x01	; 1
 5b8:	df 91       	pop	r29
 5ba:	cf 91       	pop	r28
 5bc:	1f 91       	pop	r17
 5be:	0f 91       	pop	r16
 5c0:	ff 90       	pop	r15
 5c2:	ef 90       	pop	r14
 5c4:	08 95       	ret

000005c6 <ST7735_SendColor565>:
 5c6:	cf 92       	push	r12
 5c8:	df 92       	push	r13
 5ca:	ef 92       	push	r14
 5cc:	ff 92       	push	r15
 5ce:	0f 93       	push	r16
 5d0:	1f 93       	push	r17
 5d2:	cf 93       	push	r28
 5d4:	df 93       	push	r29
 5d6:	7c 01       	movw	r14, r24
 5d8:	6b 01       	movw	r12, r22
 5da:	ea 01       	movw	r28, r20
 5dc:	6c e2       	ldi	r22, 0x2C	; 44
 5de:	0e 94 ed 01 	call	0x3da	; 0x3da <ST7735_CommandSend>
 5e2:	05 c0       	rjmp	.+10     	; 0x5ee <ST7735_SendColor565+0x28>
 5e4:	b6 01       	movw	r22, r12
 5e6:	c7 01       	movw	r24, r14
 5e8:	0e 94 66 02 	call	0x4cc	; 0x4cc <ST7735_Data16BitsSend>
 5ec:	e8 01       	movw	r28, r16
 5ee:	8e 01       	movw	r16, r28
 5f0:	01 50       	subi	r16, 0x01	; 1
 5f2:	11 09       	sbc	r17, r1
 5f4:	cd 2b       	or	r28, r29
 5f6:	b1 f7       	brne	.-20     	; 0x5e4 <ST7735_SendColor565+0x1e>
 5f8:	df 91       	pop	r29
 5fa:	cf 91       	pop	r28
 5fc:	1f 91       	pop	r17
 5fe:	0f 91       	pop	r16
 600:	ff 90       	pop	r15
 602:	ef 90       	pop	r14
 604:	df 90       	pop	r13
 606:	cf 90       	pop	r12
 608:	08 95       	ret

0000060a <ST7735_DrawPixel>:
 60a:	ef 92       	push	r14
 60c:	ff 92       	push	r15
 60e:	0f 93       	push	r16
 610:	cf 93       	push	r28
 612:	df 93       	push	r29
 614:	ec 01       	movw	r28, r24
 616:	79 01       	movw	r14, r18
 618:	04 2f       	mov	r16, r20
 61a:	24 2f       	mov	r18, r20
 61c:	46 2f       	mov	r20, r22
 61e:	0e 94 a6 02 	call	0x54c	; 0x54c <ST7735_SetWindow>
 622:	41 e0       	ldi	r20, 0x01	; 1
 624:	50 e0       	ldi	r21, 0x00	; 0
 626:	b7 01       	movw	r22, r14
 628:	ce 01       	movw	r24, r28
 62a:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <ST7735_SendColor565>
 62e:	df 91       	pop	r29
 630:	cf 91       	pop	r28
 632:	0f 91       	pop	r16
 634:	ff 90       	pop	r15
 636:	ef 90       	pop	r14
 638:	08 95       	ret

0000063a <ST7735_ClearScreen>:
 63a:	ef 92       	push	r14
 63c:	ff 92       	push	r15
 63e:	0f 93       	push	r16
 640:	cf 93       	push	r28
 642:	df 93       	push	r29
 644:	ec 01       	movw	r28, r24
 646:	7b 01       	movw	r14, r22
 648:	0d e6       	ldi	r16, 0x6D	; 109
 64a:	20 e0       	ldi	r18, 0x00	; 0
 64c:	4f e9       	ldi	r20, 0x9F	; 159
 64e:	60 e0       	ldi	r22, 0x00	; 0
 650:	0e 94 a6 02 	call	0x54c	; 0x54c <ST7735_SetWindow>
 654:	40 ec       	ldi	r20, 0xC0	; 192
 656:	54 e4       	ldi	r21, 0x44	; 68
 658:	b7 01       	movw	r22, r14
 65a:	ce 01       	movw	r24, r28
 65c:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <ST7735_SendColor565>
 660:	df 91       	pop	r29
 662:	cf 91       	pop	r28
 664:	0f 91       	pop	r16
 666:	ff 90       	pop	r15
 668:	ef 90       	pop	r14
 66a:	08 95       	ret

0000066c <ST7735_DrawChar>:
 66c:	6f 92       	push	r6
 66e:	7f 92       	push	r7
 670:	8f 92       	push	r8
 672:	9f 92       	push	r9
 674:	af 92       	push	r10
 676:	bf 92       	push	r11
 678:	cf 92       	push	r12
 67a:	df 92       	push	r13
 67c:	ef 92       	push	r14
 67e:	ff 92       	push	r15
 680:	0f 93       	push	r16
 682:	1f 93       	push	r17
 684:	cf 93       	push	r28
 686:	df 93       	push	r29
 688:	8c 01       	movw	r16, r24
 68a:	d6 2e       	mov	r13, r22
 68c:	7a 01       	movw	r14, r20
 68e:	22 23       	and	r18, r18
 690:	69 f1       	breq	.+90     	; 0x6ec <ST7735_DrawChar+0x80>
 692:	3b c0       	rjmp	.+118    	; 0x70a <ST7735_DrawChar+0x9e>
 694:	8d 2d       	mov	r24, r13
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	80 97       	sbiw	r24, 0x20	; 32
 69a:	fc 01       	movw	r30, r24
 69c:	ee 0f       	add	r30, r30
 69e:	ff 1f       	adc	r31, r31
 6a0:	ee 0f       	add	r30, r30
 6a2:	ff 1f       	adc	r31, r31
 6a4:	e8 0f       	add	r30, r24
 6a6:	f9 1f       	adc	r31, r25
 6a8:	ed 0f       	add	r30, r29
 6aa:	f1 1d       	adc	r31, r1
 6ac:	e8 59       	subi	r30, 0x98	; 152
 6ae:	ff 4f       	sbci	r31, 0xFF	; 255
 6b0:	c4 90       	lpm	r12, Z
 6b2:	88 e0       	ldi	r24, 0x08	; 8
 6b4:	15 c0       	rjmp	.+42     	; 0x6e0 <ST7735_DrawChar+0x74>
 6b6:	8c 2d       	mov	r24, r12
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	0c 2e       	mov	r0, r28
 6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <ST7735_DrawChar+0x56>
 6be:	95 95       	asr	r25
 6c0:	87 95       	ror	r24
 6c2:	0a 94       	dec	r0
 6c4:	e2 f7       	brpl	.-8      	; 0x6be <ST7735_DrawChar+0x52>
 6c6:	80 ff       	sbrs	r24, 0
 6c8:	0a c0       	rjmp	.+20     	; 0x6de <ST7735_DrawChar+0x72>
 6ca:	40 91 22 01 	lds	r20, 0x0122	; 0x800122 <cacheMemIndexRow>
 6ce:	4c 0f       	add	r20, r28
 6d0:	60 91 20 01 	lds	r22, 0x0120	; 0x800120 <__data_end>
 6d4:	6d 0f       	add	r22, r29
 6d6:	97 01       	movw	r18, r14
 6d8:	c8 01       	movw	r24, r16
 6da:	0e 94 05 03 	call	0x60a	; 0x60a <ST7735_DrawPixel>
 6de:	8c 2f       	mov	r24, r28
 6e0:	cf ef       	ldi	r28, 0xFF	; 255
 6e2:	c8 0f       	add	r28, r24
 6e4:	81 11       	cpse	r24, r1
 6e6:	e7 cf       	rjmp	.-50     	; 0x6b6 <ST7735_DrawChar+0x4a>
 6e8:	8d 2f       	mov	r24, r29
 6ea:	01 c0       	rjmp	.+2      	; 0x6ee <ST7735_DrawChar+0x82>
 6ec:	85 e0       	ldi	r24, 0x05	; 5
 6ee:	df ef       	ldi	r29, 0xFF	; 255
 6f0:	d8 0f       	add	r29, r24
 6f2:	81 11       	cpse	r24, r1
 6f4:	cf cf       	rjmp	.-98     	; 0x694 <ST7735_DrawChar+0x28>
 6f6:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 6fa:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 6fe:	06 96       	adiw	r24, 0x06	; 6
 700:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1>
 704:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
 708:	ca c0       	rjmp	.+404    	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 70a:	20 38       	cpi	r18, 0x80	; 128
 70c:	09 f0       	breq	.+2      	; 0x710 <ST7735_DrawChar+0xa4>
 70e:	56 c0       	rjmp	.+172    	; 0x7bc <ST7735_DrawChar+0x150>
 710:	45 c0       	rjmp	.+138    	; 0x79c <ST7735_DrawChar+0x130>
 712:	8d 2d       	mov	r24, r13
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	80 97       	sbiw	r24, 0x20	; 32
 718:	fc 01       	movw	r30, r24
 71a:	ee 0f       	add	r30, r30
 71c:	ff 1f       	adc	r31, r31
 71e:	ee 0f       	add	r30, r30
 720:	ff 1f       	adc	r31, r31
 722:	e8 0f       	add	r30, r24
 724:	f9 1f       	adc	r31, r25
 726:	ec 0d       	add	r30, r12
 728:	f1 1d       	adc	r31, r1
 72a:	e8 59       	subi	r30, 0x98	; 152
 72c:	ff 4f       	sbci	r31, 0xFF	; 255
 72e:	d4 91       	lpm	r29, Z
 730:	88 e0       	ldi	r24, 0x08	; 8
 732:	2e c0       	rjmp	.+92     	; 0x790 <ST7735_DrawChar+0x124>
 734:	8d 2f       	mov	r24, r29
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	0c 2e       	mov	r0, r28
 73a:	02 c0       	rjmp	.+4      	; 0x740 <ST7735_DrawChar+0xd4>
 73c:	95 95       	asr	r25
 73e:	87 95       	ror	r24
 740:	0a 94       	dec	r0
 742:	e2 f7       	brpl	.-8      	; 0x73c <ST7735_DrawChar+0xd0>
 744:	80 ff       	sbrs	r24, 0
 746:	23 c0       	rjmp	.+70     	; 0x78e <ST7735_DrawChar+0x122>
 748:	0f 2e       	mov	r0, r31
 74a:	f2 e2       	ldi	r31, 0x22	; 34
 74c:	8f 2e       	mov	r8, r31
 74e:	f1 e0       	ldi	r31, 0x01	; 1
 750:	9f 2e       	mov	r9, r31
 752:	f0 2d       	mov	r31, r0
 754:	f4 01       	movw	r30, r8
 756:	40 81       	ld	r20, Z
 758:	7c 2e       	mov	r7, r28
 75a:	77 0c       	add	r7, r7
 75c:	47 0d       	add	r20, r7
 75e:	0f 2e       	mov	r0, r31
 760:	f0 e2       	ldi	r31, 0x20	; 32
 762:	af 2e       	mov	r10, r31
 764:	f1 e0       	ldi	r31, 0x01	; 1
 766:	bf 2e       	mov	r11, r31
 768:	f0 2d       	mov	r31, r0
 76a:	f5 01       	movw	r30, r10
 76c:	60 81       	ld	r22, Z
 76e:	6c 0d       	add	r22, r12
 770:	97 01       	movw	r18, r14
 772:	c8 01       	movw	r24, r16
 774:	0e 94 05 03 	call	0x60a	; 0x60a <ST7735_DrawPixel>
 778:	f4 01       	movw	r30, r8
 77a:	40 81       	ld	r20, Z
 77c:	47 0d       	add	r20, r7
 77e:	4f 5f       	subi	r20, 0xFF	; 255
 780:	f5 01       	movw	r30, r10
 782:	60 81       	ld	r22, Z
 784:	6c 0d       	add	r22, r12
 786:	97 01       	movw	r18, r14
 788:	c8 01       	movw	r24, r16
 78a:	0e 94 05 03 	call	0x60a	; 0x60a <ST7735_DrawPixel>
 78e:	8c 2f       	mov	r24, r28
 790:	cf ef       	ldi	r28, 0xFF	; 255
 792:	c8 0f       	add	r28, r24
 794:	81 11       	cpse	r24, r1
 796:	ce cf       	rjmp	.-100    	; 0x734 <ST7735_DrawChar+0xc8>
 798:	8c 2d       	mov	r24, r12
 79a:	01 c0       	rjmp	.+2      	; 0x79e <ST7735_DrawChar+0x132>
 79c:	85 e0       	ldi	r24, 0x05	; 5
 79e:	cc 24       	eor	r12, r12
 7a0:	ca 94       	dec	r12
 7a2:	c8 0e       	add	r12, r24
 7a4:	81 11       	cpse	r24, r1
 7a6:	b5 cf       	rjmp	.-150    	; 0x712 <ST7735_DrawChar+0xa6>
 7a8:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 7ac:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 7b0:	06 96       	adiw	r24, 0x06	; 6
 7b2:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1>
 7b6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
 7ba:	71 c0       	rjmp	.+226    	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 7bc:	21 38       	cpi	r18, 0x81	; 129
 7be:	09 f0       	breq	.+2      	; 0x7c2 <ST7735_DrawChar+0x156>
 7c0:	6e c0       	rjmp	.+220    	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 7c2:	5e c0       	rjmp	.+188    	; 0x880 <__DATA_REGION_LENGTH__+0x80>
 7c4:	8d 2d       	mov	r24, r13
 7c6:	90 e0       	ldi	r25, 0x00	; 0
 7c8:	80 97       	sbiw	r24, 0x20	; 32
 7ca:	fc 01       	movw	r30, r24
 7cc:	ee 0f       	add	r30, r30
 7ce:	ff 1f       	adc	r31, r31
 7d0:	ee 0f       	add	r30, r30
 7d2:	ff 1f       	adc	r31, r31
 7d4:	e8 0f       	add	r30, r24
 7d6:	f9 1f       	adc	r31, r25
 7d8:	e7 0d       	add	r30, r7
 7da:	f1 1d       	adc	r31, r1
 7dc:	e8 59       	subi	r30, 0x98	; 152
 7de:	ff 4f       	sbci	r31, 0xFF	; 255
 7e0:	d4 91       	lpm	r29, Z
 7e2:	88 e0       	ldi	r24, 0x08	; 8
 7e4:	47 c0       	rjmp	.+142    	; 0x874 <__DATA_REGION_LENGTH__+0x74>
 7e6:	8d 2f       	mov	r24, r29
 7e8:	90 e0       	ldi	r25, 0x00	; 0
 7ea:	0c 2e       	mov	r0, r28
 7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <ST7735_DrawChar+0x186>
 7ee:	95 95       	asr	r25
 7f0:	87 95       	ror	r24
 7f2:	0a 94       	dec	r0
 7f4:	e2 f7       	brpl	.-8      	; 0x7ee <ST7735_DrawChar+0x182>
 7f6:	80 ff       	sbrs	r24, 0
 7f8:	3c c0       	rjmp	.+120    	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 7fa:	0f 2e       	mov	r0, r31
 7fc:	f2 e2       	ldi	r31, 0x22	; 34
 7fe:	8f 2e       	mov	r8, r31
 800:	f1 e0       	ldi	r31, 0x01	; 1
 802:	9f 2e       	mov	r9, r31
 804:	f0 2d       	mov	r31, r0
 806:	f4 01       	movw	r30, r8
 808:	40 81       	ld	r20, Z
 80a:	6c 2e       	mov	r6, r28
 80c:	66 0c       	add	r6, r6
 80e:	46 0d       	add	r20, r6
 810:	0f 2e       	mov	r0, r31
 812:	f0 e2       	ldi	r31, 0x20	; 32
 814:	af 2e       	mov	r10, r31
 816:	f1 e0       	ldi	r31, 0x01	; 1
 818:	bf 2e       	mov	r11, r31
 81a:	f0 2d       	mov	r31, r0
 81c:	f5 01       	movw	r30, r10
 81e:	60 81       	ld	r22, Z
 820:	c7 2c       	mov	r12, r7
 822:	cc 0c       	add	r12, r12
 824:	6c 0d       	add	r22, r12
 826:	97 01       	movw	r18, r14
 828:	c8 01       	movw	r24, r16
 82a:	0e 94 05 03 	call	0x60a	; 0x60a <ST7735_DrawPixel>
 82e:	f4 01       	movw	r30, r8
 830:	40 81       	ld	r20, Z
 832:	46 0d       	add	r20, r6
 834:	4f 5f       	subi	r20, 0xFF	; 255
 836:	f5 01       	movw	r30, r10
 838:	60 81       	ld	r22, Z
 83a:	6c 0d       	add	r22, r12
 83c:	97 01       	movw	r18, r14
 83e:	c8 01       	movw	r24, r16
 840:	0e 94 05 03 	call	0x60a	; 0x60a <ST7735_DrawPixel>
 844:	f4 01       	movw	r30, r8
 846:	40 81       	ld	r20, Z
 848:	46 0d       	add	r20, r6
 84a:	f5 01       	movw	r30, r10
 84c:	60 81       	ld	r22, Z
 84e:	6c 0d       	add	r22, r12
 850:	6f 5f       	subi	r22, 0xFF	; 255
 852:	97 01       	movw	r18, r14
 854:	c8 01       	movw	r24, r16
 856:	0e 94 05 03 	call	0x60a	; 0x60a <ST7735_DrawPixel>
 85a:	f4 01       	movw	r30, r8
 85c:	40 81       	ld	r20, Z
 85e:	46 0d       	add	r20, r6
 860:	4f 5f       	subi	r20, 0xFF	; 255
 862:	f5 01       	movw	r30, r10
 864:	60 81       	ld	r22, Z
 866:	6c 0d       	add	r22, r12
 868:	6f 5f       	subi	r22, 0xFF	; 255
 86a:	97 01       	movw	r18, r14
 86c:	c8 01       	movw	r24, r16
 86e:	0e 94 05 03 	call	0x60a	; 0x60a <ST7735_DrawPixel>
 872:	8c 2f       	mov	r24, r28
 874:	cf ef       	ldi	r28, 0xFF	; 255
 876:	c8 0f       	add	r28, r24
 878:	81 11       	cpse	r24, r1
 87a:	b5 cf       	rjmp	.-150    	; 0x7e6 <ST7735_DrawChar+0x17a>
 87c:	87 2d       	mov	r24, r7
 87e:	01 c0       	rjmp	.+2      	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 880:	85 e0       	ldi	r24, 0x05	; 5
 882:	77 24       	eor	r7, r7
 884:	7a 94       	dec	r7
 886:	78 0e       	add	r7, r24
 888:	81 11       	cpse	r24, r1
 88a:	9c cf       	rjmp	.-200    	; 0x7c4 <ST7735_DrawChar+0x158>
 88c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 890:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 894:	0b 96       	adiw	r24, 0x0b	; 11
 896:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1>
 89a:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
 89e:	80 e0       	ldi	r24, 0x00	; 0
 8a0:	df 91       	pop	r29
 8a2:	cf 91       	pop	r28
 8a4:	1f 91       	pop	r17
 8a6:	0f 91       	pop	r16
 8a8:	ff 90       	pop	r15
 8aa:	ef 90       	pop	r14
 8ac:	df 90       	pop	r13
 8ae:	cf 90       	pop	r12
 8b0:	bf 90       	pop	r11
 8b2:	af 90       	pop	r10
 8b4:	9f 90       	pop	r9
 8b6:	8f 90       	pop	r8
 8b8:	7f 90       	pop	r7
 8ba:	6f 90       	pop	r6
 8bc:	08 95       	ret

000008be <ST7735_SetPosition>:
 8be:	81 3a       	cpi	r24, 0xA1	; 161
 8c0:	10 f0       	brcs	.+4      	; 0x8c6 <ST7735_SetPosition+0x8>
 8c2:	6f 36       	cpi	r22, 0x6F	; 111
 8c4:	e8 f4       	brcc	.+58     	; 0x900 <__stack+0x1>
 8c6:	81 3a       	cpi	r24, 0xA1	; 161
 8c8:	78 f0       	brcs	.+30     	; 0x8e8 <ST7735_SetPosition+0x2a>
 8ca:	6f 36       	cpi	r22, 0x6F	; 111
 8cc:	68 f4       	brcc	.+26     	; 0x8e8 <ST7735_SetPosition+0x2a>
 8ce:	70 e0       	ldi	r23, 0x00	; 0
 8d0:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <cacheMemIndexRow+0x1>
 8d4:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <cacheMemIndexRow>
 8d8:	82 e0       	ldi	r24, 0x02	; 2
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1>
 8e0:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
 8e4:	80 e0       	ldi	r24, 0x00	; 0
 8e6:	08 95       	ret
 8e8:	70 e0       	ldi	r23, 0x00	; 0
 8ea:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <cacheMemIndexRow+0x1>
 8ee:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <cacheMemIndexRow>
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1>
 8f8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
 8fc:	80 e0       	ldi	r24, 0x00	; 0
 8fe:	08 95       	ret
 900:	81 e0       	ldi	r24, 0x01	; 1
 902:	08 95       	ret

00000904 <ST7735_CheckPosition>:
 904:	81 3a       	cpi	r24, 0xA1	; 161
 906:	10 f0       	brcs	.+4      	; 0x90c <ST7735_CheckPosition+0x8>
 908:	46 17       	cp	r20, r22
 90a:	88 f0       	brcs	.+34     	; 0x92e <ST7735_CheckPosition+0x2a>
 90c:	81 3a       	cpi	r24, 0xA1	; 161
 90e:	88 f0       	brcs	.+34     	; 0x932 <ST7735_CheckPosition+0x2e>
 910:	46 17       	cp	r20, r22
 912:	88 f0       	brcs	.+34     	; 0x936 <ST7735_CheckPosition+0x32>
 914:	70 e0       	ldi	r23, 0x00	; 0
 916:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <cacheMemIndexRow+0x1>
 91a:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <cacheMemIndexRow>
 91e:	82 e0       	ldi	r24, 0x02	; 2
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1>
 926:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
 92a:	80 e0       	ldi	r24, 0x00	; 0
 92c:	08 95       	ret
 92e:	81 e0       	ldi	r24, 0x01	; 1
 930:	08 95       	ret
 932:	80 e0       	ldi	r24, 0x00	; 0
 934:	08 95       	ret
 936:	80 e0       	ldi	r24, 0x00	; 0
 938:	08 95       	ret

0000093a <ST7735_DrawString>:
 93a:	9f 92       	push	r9
 93c:	af 92       	push	r10
 93e:	bf 92       	push	r11
 940:	cf 92       	push	r12
 942:	df 92       	push	r13
 944:	ef 92       	push	r14
 946:	ff 92       	push	r15
 948:	0f 93       	push	r16
 94a:	1f 93       	push	r17
 94c:	cf 93       	push	r28
 94e:	df 93       	push	r29
 950:	6c 01       	movw	r12, r24
 952:	5b 01       	movw	r10, r22
 954:	7a 01       	movw	r14, r20
 956:	92 2e       	mov	r9, r18
 958:	00 e0       	ldi	r16, 0x00	; 0
 95a:	10 e0       	ldi	r17, 0x00	; 0
 95c:	1c c0       	rjmp	.+56     	; 0x996 <ST7735_DrawString+0x5c>
 95e:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 962:	99 2d       	mov	r25, r9
 964:	9f 70       	andi	r25, 0x0F	; 15
 966:	89 0f       	add	r24, r25
 968:	99 2d       	mov	r25, r9
 96a:	92 95       	swap	r25
 96c:	9f 70       	andi	r25, 0x0F	; 15
 96e:	98 5f       	subi	r25, 0xF8	; 248
 970:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <cacheMemIndexRow>
 974:	69 0f       	add	r22, r25
 976:	4e e6       	ldi	r20, 0x6E	; 110
 978:	49 1b       	sub	r20, r25
 97a:	29 2d       	mov	r18, r9
 97c:	8b 5f       	subi	r24, 0xFB	; 251
 97e:	0e 94 82 04 	call	0x904	; 0x904 <ST7735_CheckPosition>
 982:	81 11       	cpse	r24, r1
 984:	08 c0       	rjmp	.+16     	; 0x996 <ST7735_DrawString+0x5c>
 986:	0f 5f       	subi	r16, 0xFF	; 255
 988:	1f 4f       	sbci	r17, 0xFF	; 255
 98a:	29 2d       	mov	r18, r9
 98c:	a7 01       	movw	r20, r14
 98e:	68 81       	ld	r22, Y
 990:	c6 01       	movw	r24, r12
 992:	0e 94 36 03 	call	0x66c	; 0x66c <ST7735_DrawChar>
 996:	e5 01       	movw	r28, r10
 998:	c0 0f       	add	r28, r16
 99a:	d1 1f       	adc	r29, r17
 99c:	88 81       	ld	r24, Y
 99e:	81 11       	cpse	r24, r1
 9a0:	de cf       	rjmp	.-68     	; 0x95e <ST7735_DrawString+0x24>
 9a2:	df 91       	pop	r29
 9a4:	cf 91       	pop	r28
 9a6:	1f 91       	pop	r17
 9a8:	0f 91       	pop	r16
 9aa:	ff 90       	pop	r15
 9ac:	ef 90       	pop	r14
 9ae:	df 90       	pop	r13
 9b0:	cf 90       	pop	r12
 9b2:	bf 90       	pop	r11
 9b4:	af 90       	pop	r10
 9b6:	9f 90       	pop	r9
 9b8:	08 95       	ret

000009ba <ST7735_DrawRectangle>:
 * @param   uint16_t color
 *
 * @return  void
 */
void ST7735_DrawRectangle (struct st7735 * lcd, uint8_t xs, uint8_t xe, uint8_t ys, uint8_t ye, uint16_t color)
{
 9ba:	bf 92       	push	r11
 9bc:	cf 92       	push	r12
 9be:	df 92       	push	r13
 9c0:	ef 92       	push	r14
 9c2:	ff 92       	push	r15
 9c4:	0f 93       	push	r16
 9c6:	1f 93       	push	r17
 9c8:	cf 93       	push	r28
 9ca:	df 93       	push	r29
 9cc:	6c 01       	movw	r12, r24
 9ce:	b6 2e       	mov	r11, r22
 9d0:	d4 2f       	mov	r29, r20
 9d2:	12 2f       	mov	r17, r18
 9d4:	c0 2f       	mov	r28, r16
  uint8_t temp;
  // check if start is > as end  
  if (xs > xe) {
 9d6:	46 17       	cp	r20, r22
 9d8:	10 f4       	brcc	.+4      	; 0x9de <ST7735_DrawRectangle+0x24>
    // temporary safe
    temp = xe;
    // start change for end
    xe = xs;
    // end change for start
    xs = temp;
 9da:	b4 2e       	mov	r11, r20
  // check if start is > as end  
  if (xs > xe) {
    // temporary safe
    temp = xe;
    // start change for end
    xe = xs;
 9dc:	d6 2f       	mov	r29, r22
    // end change for start
    xs = temp;
  }
  // check if start is > as end
  if (ys > ye) {
 9de:	c1 17       	cp	r28, r17
 9e0:	18 f4       	brcc	.+6      	; 0x9e8 <ST7735_DrawRectangle+0x2e>
 9e2:	81 2f       	mov	r24, r17
    // temporary safe
    temp = ye;
    // start change for end
    ye = ys;
    // end change for start
    ys = temp;
 9e4:	1c 2f       	mov	r17, r28
  // check if start is > as end
  if (ys > ye) {
    // temporary safe
    temp = ye;
    // start change for end
    ye = ys;
 9e6:	c8 2f       	mov	r28, r24
    // end change for start
    ys = temp;
  }
  // set window
  ST7735_SetWindow (lcd, xs, xe, ys, ye);
 9e8:	0c 2f       	mov	r16, r28
 9ea:	21 2f       	mov	r18, r17
 9ec:	4d 2f       	mov	r20, r29
 9ee:	6b 2d       	mov	r22, r11
 9f0:	c6 01       	movw	r24, r12
 9f2:	0e 94 a6 02 	call	0x54c	; 0x54c <ST7735_SetWindow>
  // send color
  ST7735_SendColor565 (lcd, color, (xe-xs+1)*(ye-ys+1));  
 9f6:	2d 2f       	mov	r18, r29
 9f8:	30 e0       	ldi	r19, 0x00	; 0
 9fa:	2b 19       	sub	r18, r11
 9fc:	31 09       	sbc	r19, r1
 9fe:	2f 5f       	subi	r18, 0xFF	; 255
 a00:	3f 4f       	sbci	r19, 0xFF	; 255
 a02:	8c 2f       	mov	r24, r28
 a04:	90 e0       	ldi	r25, 0x00	; 0
 a06:	81 1b       	sub	r24, r17
 a08:	91 09       	sbc	r25, r1
 a0a:	01 96       	adiw	r24, 0x01	; 1
 a0c:	28 9f       	mul	r18, r24
 a0e:	a0 01       	movw	r20, r0
 a10:	29 9f       	mul	r18, r25
 a12:	50 0d       	add	r21, r0
 a14:	38 9f       	mul	r19, r24
 a16:	50 0d       	add	r21, r0
 a18:	11 24       	eor	r1, r1
 a1a:	b7 01       	movw	r22, r14
 a1c:	c6 01       	movw	r24, r12
 a1e:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <ST7735_SendColor565>
}
 a22:	df 91       	pop	r29
 a24:	cf 91       	pop	r28
 a26:	1f 91       	pop	r17
 a28:	0f 91       	pop	r16
 a2a:	ff 90       	pop	r15
 a2c:	ef 90       	pop	r14
 a2e:	df 90       	pop	r13
 a30:	cf 90       	pop	r12
 a32:	bf 90       	pop	r11
 a34:	08 95       	ret

00000a36 <ST7735_DelayMs>:
 * @return  void
 */
void ST7735_DelayMs (uint8_t time)
{
  // loop through real time
  while (time--) {
 a36:	07 c0       	rjmp	.+14     	; 0xa46 <ST7735_DelayMs+0x10>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 a38:	e9 ef       	ldi	r30, 0xF9	; 249
 a3a:	f0 e0       	ldi	r31, 0x00	; 0
 a3c:	31 97       	sbiw	r30, 0x01	; 1
 a3e:	f1 f7       	brne	.-4      	; 0xa3c <ST7735_DelayMs+0x6>
 a40:	00 c0       	rjmp	.+0      	; 0xa42 <ST7735_DelayMs+0xc>
 a42:	00 00       	nop
 a44:	89 2f       	mov	r24, r25
 a46:	9f ef       	ldi	r25, 0xFF	; 255
 a48:	98 0f       	add	r25, r24
 a4a:	81 11       	cpse	r24, r1
 a4c:	f5 cf       	rjmp	.-22     	; 0xa38 <ST7735_DelayMs+0x2>
    // 1 s delay
    _delay_ms(1);
  }
}
 a4e:	08 95       	ret

00000a50 <ST7735_Commands>:
 * @param   const uint8_t *
 *
 * @return  void
 */
void ST7735_Commands (struct st7735 * lcd, const uint8_t * initializers)
{
 a50:	af 92       	push	r10
 a52:	bf 92       	push	r11
 a54:	cf 92       	push	r12
 a56:	df 92       	push	r13
 a58:	ef 92       	push	r14
 a5a:	ff 92       	push	r15
 a5c:	0f 93       	push	r16
 a5e:	1f 93       	push	r17
 a60:	cf 93       	push	r28
 a62:	df 93       	push	r29
 a64:	6c 01       	movw	r12, r24
  uint8_t args;
  uint8_t cmnd;
  uint8_t time;
  uint8_t loop = pgm_read_byte (initializers++);
 a66:	eb 01       	movw	r28, r22
 a68:	21 96       	adiw	r28, 0x01	; 1
 a6a:	fb 01       	movw	r30, r22
 a6c:	64 91       	lpm	r22, Z

  // loop through whole initializer list
  while (loop--) {
 a6e:	20 c0       	rjmp	.+64     	; 0xab0 <ST7735_Commands+0x60>

    // 1st arg - number of command arguments
    args = pgm_read_byte (initializers++);
 a70:	ce 01       	movw	r24, r28
 a72:	01 96       	adiw	r24, 0x01	; 1
 a74:	fe 01       	movw	r30, r28
 a76:	14 91       	lpm	r17, Z
    // 2nd arg - delay time
    time = pgm_read_byte (initializers++);
 a78:	fc 01       	movw	r30, r24
 a7a:	b4 90       	lpm	r11, Z
    // 3th arg - command
    cmnd = pgm_read_byte (initializers++);
 a7c:	31 96       	adiw	r30, 0x01	; 1
 a7e:	64 91       	lpm	r22, Z
 a80:	23 96       	adiw	r28, 0x03	; 3

    // send command
    ST7735_CommandSend (lcd, cmnd);
 a82:	c6 01       	movw	r24, r12
 a84:	0e 94 ed 01 	call	0x3da	; 0x3da <ST7735_CommandSend>
    // send arguments
    while (args--) {
 a88:	0b c0       	rjmp	.+22     	; 0xaa0 <ST7735_Commands+0x50>
      // send argument
      ST7735_Data8BitsSend (lcd, pgm_read_byte (initializers++));
 a8a:	7e 01       	movw	r14, r28
 a8c:	ff ef       	ldi	r31, 0xFF	; 255
 a8e:	ef 1a       	sub	r14, r31
 a90:	ff 0a       	sbc	r15, r31
 a92:	fe 01       	movw	r30, r28
 a94:	64 91       	lpm	r22, Z
 a96:	c6 01       	movw	r24, r12
 a98:	0e 94 2a 02 	call	0x454	; 0x454 <ST7735_Data8BitsSend>
    cmnd = pgm_read_byte (initializers++);

    // send command
    ST7735_CommandSend (lcd, cmnd);
    // send arguments
    while (args--) {
 a9c:	10 2f       	mov	r17, r16
      // send argument
      ST7735_Data8BitsSend (lcd, pgm_read_byte (initializers++));
 a9e:	e7 01       	movw	r28, r14
    cmnd = pgm_read_byte (initializers++);

    // send command
    ST7735_CommandSend (lcd, cmnd);
    // send arguments
    while (args--) {
 aa0:	0f ef       	ldi	r16, 0xFF	; 255
 aa2:	01 0f       	add	r16, r17
 aa4:	11 11       	cpse	r17, r1
 aa6:	f1 cf       	rjmp	.-30     	; 0xa8a <ST7735_Commands+0x3a>
      // send argument
      ST7735_Data8BitsSend (lcd, pgm_read_byte (initializers++));
    }
    // delay
    ST7735_DelayMs (time);
 aa8:	8b 2d       	mov	r24, r11
 aaa:	0e 94 1b 05 	call	0xa36	; 0xa36 <ST7735_DelayMs>
  uint8_t cmnd;
  uint8_t time;
  uint8_t loop = pgm_read_byte (initializers++);

  // loop through whole initializer list
  while (loop--) {
 aae:	6a 2d       	mov	r22, r10
 ab0:	aa 24       	eor	r10, r10
 ab2:	aa 94       	dec	r10
 ab4:	a6 0e       	add	r10, r22
 ab6:	61 11       	cpse	r22, r1
 ab8:	db cf       	rjmp	.-74     	; 0xa70 <ST7735_Commands+0x20>
      ST7735_Data8BitsSend (lcd, pgm_read_byte (initializers++));
    }
    // delay
    ST7735_DelayMs (time);
  }
}
 aba:	df 91       	pop	r29
 abc:	cf 91       	pop	r28
 abe:	1f 91       	pop	r17
 ac0:	0f 91       	pop	r16
 ac2:	ff 90       	pop	r15
 ac4:	ef 90       	pop	r14
 ac6:	df 90       	pop	r13
 ac8:	cf 90       	pop	r12
 aca:	bf 90       	pop	r11
 acc:	af 90       	pop	r10
 ace:	08 95       	ret

00000ad0 <ST7735_Init>:
 * @param   struct st7735 *
 *
 * @return  void
 */
void ST7735_Init (struct st7735 * lcd)
{
 ad0:	cf 93       	push	r28
 ad2:	df 93       	push	r29
 ad4:	ec 01       	movw	r28, r24
  // init pins
  ST7735_Pins_Init (lcd);
 ad6:	0e 94 9d 01 	call	0x33a	; 0x33a <ST7735_Pins_Init>
  // init SPI
  ST7735_SPI_Init ();
 ada:	0e 94 8d 01 	call	0x31a	; 0x31a <ST7735_SPI_Init>
  // hardware reset
  ST7735_Reset (lcd->rs);
 ade:	8e 81       	ldd	r24, Y+6	; 0x06
 ae0:	9f 81       	ldd	r25, Y+7	; 0x07
 ae2:	0e 94 4c 01 	call	0x298	; 0x298 <ST7735_Reset>
  // load list of commands
  ST7735_Commands (lcd, INIT_ST7735B);
 ae6:	68 e4       	ldi	r22, 0x48	; 72
 ae8:	72 e0       	ldi	r23, 0x02	; 2
 aea:	ce 01       	movw	r24, r28
 aec:	0e 94 28 05 	call	0xa50	; 0xa50 <ST7735_Commands>
}
 af0:	df 91       	pop	r29
 af2:	cf 91       	pop	r28
 af4:	08 95       	ret

00000af6 <ST7735_DrawSmiley>:
 * @param   uint16_t color
 *
 * @return  void
 *
 */
void ST7735_DrawSmiley (struct st7735 * lcd, uint8_t x, uint8_t y, uint16_t color) {
 af6:	3f 92       	push	r3
 af8:	4f 92       	push	r4
 afa:	5f 92       	push	r5
 afc:	6f 92       	push	r6
 afe:	7f 92       	push	r7
 b00:	8f 92       	push	r8
 b02:	9f 92       	push	r9
 b04:	af 92       	push	r10
 b06:	bf 92       	push	r11
 b08:	cf 92       	push	r12
 b0a:	df 92       	push	r13
 b0c:	ef 92       	push	r14
 b0e:	ff 92       	push	r15
 b10:	0f 93       	push	r16
 b12:	1f 93       	push	r17
 b14:	cf 93       	push	r28
 b16:	df 93       	push	r29
 b18:	6c 01       	movw	r12, r24
 b1a:	c6 2f       	mov	r28, r22
 b1c:	d4 2f       	mov	r29, r20
	//ST7735_DrawPixel(lcd, x, y, color); THIS IS THE CENTRE
	// Draw Left Eye
	ST7735_DrawRectangle(lcd, x-5, x-3, y-5, y-3, color);
 b1e:	0f 2e       	mov	r0, r31
 b20:	fd ef       	ldi	r31, 0xFD	; 253
 b22:	9f 2e       	mov	r9, r31
 b24:	f0 2d       	mov	r31, r0
 b26:	94 0e       	add	r9, r20
 b28:	1b ef       	ldi	r17, 0xFB	; 251
 b2a:	14 0f       	add	r17, r20
 b2c:	0f 2e       	mov	r0, r31
 b2e:	fd ef       	ldi	r31, 0xFD	; 253
 b30:	5f 2e       	mov	r5, r31
 b32:	f0 2d       	mov	r31, r0
 b34:	56 0e       	add	r5, r22
 b36:	0f 2e       	mov	r0, r31
 b38:	fb ef       	ldi	r31, 0xFB	; 251
 b3a:	3f 2e       	mov	r3, r31
 b3c:	f0 2d       	mov	r31, r0
 b3e:	36 0e       	add	r3, r22
 b40:	79 01       	movw	r14, r18
 b42:	09 2d       	mov	r16, r9
 b44:	21 2f       	mov	r18, r17
 b46:	45 2d       	mov	r20, r5
 b48:	63 2d       	mov	r22, r3
 b4a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
	// Draw Right Eye
	ST7735_DrawRectangle(lcd, x+5, x+3, y-5, y-3, color);
 b4e:	0f 2e       	mov	r0, r31
 b50:	f3 e0       	ldi	r31, 0x03	; 3
 b52:	4f 2e       	mov	r4, r31
 b54:	f0 2d       	mov	r31, r0
 b56:	4c 0e       	add	r4, r28
 b58:	0f 2e       	mov	r0, r31
 b5a:	f5 e0       	ldi	r31, 0x05	; 5
 b5c:	8f 2e       	mov	r8, r31
 b5e:	f0 2d       	mov	r31, r0
 b60:	8c 0e       	add	r8, r28
 b62:	21 2f       	mov	r18, r17
 b64:	44 2d       	mov	r20, r4
 b66:	68 2d       	mov	r22, r8
 b68:	c6 01       	movw	r24, r12
 b6a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
	// Draw mouth
	ST7735_DrawRectangle(lcd, x-7, x-6, y+3, y+5, color);
 b6e:	15 e0       	ldi	r17, 0x05	; 5
 b70:	1d 0f       	add	r17, r29
 b72:	0f 2e       	mov	r0, r31
 b74:	f3 e0       	ldi	r31, 0x03	; 3
 b76:	9f 2e       	mov	r9, r31
 b78:	f0 2d       	mov	r31, r0
 b7a:	9d 0e       	add	r9, r29
 b7c:	4a ef       	ldi	r20, 0xFA	; 250
 b7e:	4c 0f       	add	r20, r28
 b80:	69 ef       	ldi	r22, 0xF9	; 249
 b82:	6c 0f       	add	r22, r28
 b84:	01 2f       	mov	r16, r17
 b86:	29 2d       	mov	r18, r9
 b88:	c6 01       	movw	r24, r12
 b8a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
	ST7735_DrawRectangle(lcd, x-5, x-4, y+4, y+6, color);
 b8e:	0f 2e       	mov	r0, r31
 b90:	f6 e0       	ldi	r31, 0x06	; 6
 b92:	6f 2e       	mov	r6, r31
 b94:	f0 2d       	mov	r31, r0
 b96:	6d 0e       	add	r6, r29
 b98:	68 94       	set
 b9a:	77 24       	eor	r7, r7
 b9c:	72 f8       	bld	r7, 2
 b9e:	7d 0e       	add	r7, r29
 ba0:	4c ef       	ldi	r20, 0xFC	; 252
 ba2:	4c 0f       	add	r20, r28
 ba4:	06 2d       	mov	r16, r6
 ba6:	27 2d       	mov	r18, r7
 ba8:	63 2d       	mov	r22, r3
 baa:	c6 01       	movw	r24, r12
 bac:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
	ST7735_DrawRectangle(lcd, x-3, x+3, y+5, y+7, color);
 bb0:	07 e0       	ldi	r16, 0x07	; 7
 bb2:	0d 0f       	add	r16, r29
 bb4:	21 2f       	mov	r18, r17
 bb6:	44 2d       	mov	r20, r4
 bb8:	65 2d       	mov	r22, r5
 bba:	c6 01       	movw	r24, r12
 bbc:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
	ST7735_DrawRectangle(lcd, x+4, x+5, y+4, y+6, color);
 bc0:	64 e0       	ldi	r22, 0x04	; 4
 bc2:	6c 0f       	add	r22, r28
 bc4:	06 2d       	mov	r16, r6
 bc6:	27 2d       	mov	r18, r7
 bc8:	48 2d       	mov	r20, r8
 bca:	c6 01       	movw	r24, r12
 bcc:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
	ST7735_DrawRectangle(lcd, x+6, x+7, y+3, y+5, color);
 bd0:	47 e0       	ldi	r20, 0x07	; 7
 bd2:	4c 0f       	add	r20, r28
 bd4:	66 e0       	ldi	r22, 0x06	; 6
 bd6:	6c 0f       	add	r22, r28
 bd8:	01 2f       	mov	r16, r17
 bda:	29 2d       	mov	r18, r9
 bdc:	c6 01       	movw	r24, r12
 bde:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
}
 be2:	df 91       	pop	r29
 be4:	cf 91       	pop	r28
 be6:	1f 91       	pop	r17
 be8:	0f 91       	pop	r16
 bea:	ff 90       	pop	r15
 bec:	ef 90       	pop	r14
 bee:	df 90       	pop	r13
 bf0:	cf 90       	pop	r12
 bf2:	bf 90       	pop	r11
 bf4:	af 90       	pop	r10
 bf6:	9f 90       	pop	r9
 bf8:	8f 90       	pop	r8
 bfa:	7f 90       	pop	r7
 bfc:	6f 90       	pop	r6
 bfe:	5f 90       	pop	r5
 c00:	4f 90       	pop	r4
 c02:	3f 90       	pop	r3
 c04:	08 95       	ret

00000c06 <ST7735_DrawSad>:
 * @param   uint16_t color
 *
 * @return  void
 *
 */
void ST7735_DrawSad (struct st7735 * lcd, uint8_t x, uint8_t y, uint16_t color) {
 c06:	3f 92       	push	r3
 c08:	4f 92       	push	r4
 c0a:	5f 92       	push	r5
 c0c:	6f 92       	push	r6
 c0e:	7f 92       	push	r7
 c10:	8f 92       	push	r8
 c12:	9f 92       	push	r9
 c14:	af 92       	push	r10
 c16:	bf 92       	push	r11
 c18:	cf 92       	push	r12
 c1a:	df 92       	push	r13
 c1c:	ef 92       	push	r14
 c1e:	ff 92       	push	r15
 c20:	0f 93       	push	r16
 c22:	1f 93       	push	r17
 c24:	cf 93       	push	r28
 c26:	df 93       	push	r29
 c28:	6c 01       	movw	r12, r24
 c2a:	c6 2f       	mov	r28, r22
 c2c:	d4 2f       	mov	r29, r20
	//ST7735_DrawPixel(lcd, x, y, color); THIS IS THE CENTRE
	// Draw Left Eye
	ST7735_DrawRectangle(lcd, x-5, x-3, y-5, y-3, color);
 c2e:	0f 2e       	mov	r0, r31
 c30:	fd ef       	ldi	r31, 0xFD	; 253
 c32:	9f 2e       	mov	r9, r31
 c34:	f0 2d       	mov	r31, r0
 c36:	94 0e       	add	r9, r20
 c38:	1b ef       	ldi	r17, 0xFB	; 251
 c3a:	14 0f       	add	r17, r20
 c3c:	0f 2e       	mov	r0, r31
 c3e:	fd ef       	ldi	r31, 0xFD	; 253
 c40:	5f 2e       	mov	r5, r31
 c42:	f0 2d       	mov	r31, r0
 c44:	56 0e       	add	r5, r22
 c46:	0f 2e       	mov	r0, r31
 c48:	fb ef       	ldi	r31, 0xFB	; 251
 c4a:	3f 2e       	mov	r3, r31
 c4c:	f0 2d       	mov	r31, r0
 c4e:	36 0e       	add	r3, r22
 c50:	79 01       	movw	r14, r18
 c52:	09 2d       	mov	r16, r9
 c54:	21 2f       	mov	r18, r17
 c56:	45 2d       	mov	r20, r5
 c58:	63 2d       	mov	r22, r3
 c5a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
	// Draw Right Eye
	ST7735_DrawRectangle(lcd, x+5, x+3, y-5, y-3, color);
 c5e:	0f 2e       	mov	r0, r31
 c60:	f3 e0       	ldi	r31, 0x03	; 3
 c62:	4f 2e       	mov	r4, r31
 c64:	f0 2d       	mov	r31, r0
 c66:	4c 0e       	add	r4, r28
 c68:	0f 2e       	mov	r0, r31
 c6a:	f5 e0       	ldi	r31, 0x05	; 5
 c6c:	8f 2e       	mov	r8, r31
 c6e:	f0 2d       	mov	r31, r0
 c70:	8c 0e       	add	r8, r28
 c72:	21 2f       	mov	r18, r17
 c74:	44 2d       	mov	r20, r4
 c76:	68 2d       	mov	r22, r8
 c78:	c6 01       	movw	r24, r12
 c7a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
	// Draw mouth
	ST7735_DrawRectangle(lcd, x-7, x-6, y+5, y+7, color);
 c7e:	0f 2e       	mov	r0, r31
 c80:	f7 e0       	ldi	r31, 0x07	; 7
 c82:	9f 2e       	mov	r9, r31
 c84:	f0 2d       	mov	r31, r0
 c86:	9d 0e       	add	r9, r29
 c88:	15 e0       	ldi	r17, 0x05	; 5
 c8a:	1d 0f       	add	r17, r29
 c8c:	4a ef       	ldi	r20, 0xFA	; 250
 c8e:	4c 0f       	add	r20, r28
 c90:	69 ef       	ldi	r22, 0xF9	; 249
 c92:	6c 0f       	add	r22, r28
 c94:	09 2d       	mov	r16, r9
 c96:	21 2f       	mov	r18, r17
 c98:	c6 01       	movw	r24, r12
 c9a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
	ST7735_DrawRectangle(lcd, x-5, x-4, y+4, y+6, color);
 c9e:	0f 2e       	mov	r0, r31
 ca0:	f6 e0       	ldi	r31, 0x06	; 6
 ca2:	6f 2e       	mov	r6, r31
 ca4:	f0 2d       	mov	r31, r0
 ca6:	6d 0e       	add	r6, r29
 ca8:	68 94       	set
 caa:	77 24       	eor	r7, r7
 cac:	72 f8       	bld	r7, 2
 cae:	7d 0e       	add	r7, r29
 cb0:	4c ef       	ldi	r20, 0xFC	; 252
 cb2:	4c 0f       	add	r20, r28
 cb4:	06 2d       	mov	r16, r6
 cb6:	27 2d       	mov	r18, r7
 cb8:	63 2d       	mov	r22, r3
 cba:	c6 01       	movw	r24, r12
 cbc:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
	ST7735_DrawRectangle(lcd, x-3, x+3, y+3, y+5, color);
 cc0:	23 e0       	ldi	r18, 0x03	; 3
 cc2:	2d 0f       	add	r18, r29
 cc4:	01 2f       	mov	r16, r17
 cc6:	44 2d       	mov	r20, r4
 cc8:	65 2d       	mov	r22, r5
 cca:	c6 01       	movw	r24, r12
 ccc:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
	ST7735_DrawRectangle(lcd, x+4, x+5, y+4, y+6, color);
 cd0:	64 e0       	ldi	r22, 0x04	; 4
 cd2:	6c 0f       	add	r22, r28
 cd4:	06 2d       	mov	r16, r6
 cd6:	27 2d       	mov	r18, r7
 cd8:	48 2d       	mov	r20, r8
 cda:	c6 01       	movw	r24, r12
 cdc:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
	ST7735_DrawRectangle(lcd, x+6, x+7, y+5, y+7, color);
 ce0:	47 e0       	ldi	r20, 0x07	; 7
 ce2:	4c 0f       	add	r20, r28
 ce4:	66 e0       	ldi	r22, 0x06	; 6
 ce6:	6c 0f       	add	r22, r28
 ce8:	09 2d       	mov	r16, r9
 cea:	21 2f       	mov	r18, r17
 cec:	c6 01       	movw	r24, r12
 cee:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ST7735_DrawRectangle>
}
 cf2:	df 91       	pop	r29
 cf4:	cf 91       	pop	r28
 cf6:	1f 91       	pop	r17
 cf8:	0f 91       	pop	r16
 cfa:	ff 90       	pop	r15
 cfc:	ef 90       	pop	r14
 cfe:	df 90       	pop	r13
 d00:	cf 90       	pop	r12
 d02:	bf 90       	pop	r11
 d04:	af 90       	pop	r10
 d06:	9f 90       	pop	r9
 d08:	8f 90       	pop	r8
 d0a:	7f 90       	pop	r7
 d0c:	6f 90       	pop	r6
 d0e:	5f 90       	pop	r5
 d10:	4f 90       	pop	r4
 d12:	3f 90       	pop	r3
 d14:	08 95       	ret

00000d16 <main>:
 * @param   Void
 *
 * @return  Void
 */
int main (void)
{
 d16:	cf 93       	push	r28
 d18:	df 93       	push	r29
 d1a:	cd b7       	in	r28, 0x3d	; 61
 d1c:	de b7       	in	r29, 0x3e	; 62
 d1e:	6c 97       	sbiw	r28, 0x1c	; 28
 d20:	0f b6       	in	r0, 0x3f	; 63
 d22:	f8 94       	cli
 d24:	de bf       	out	0x3e, r29	; 62
 d26:	0f be       	out	0x3f, r0	; 63
 d28:	cd bf       	out	0x3d, r28	; 61
  uint8_t end = MAX_X - start;

  // LCD 1 - init struct
  // ----------------------------------------------------------
  // Chip Select
  struct signal cs = { .ddr = &DDRB, .port = &PORTB, .pin = 2 };
 d2a:	25 e0       	ldi	r18, 0x05	; 5
 d2c:	e0 e0       	ldi	r30, 0x00	; 0
 d2e:	f1 e0       	ldi	r31, 0x01	; 1
 d30:	ce 01       	movw	r24, r28
 d32:	01 96       	adiw	r24, 0x01	; 1
 d34:	dc 01       	movw	r26, r24
 d36:	01 90       	ld	r0, Z+
 d38:	0d 92       	st	X+, r0
 d3a:	2a 95       	dec	r18
 d3c:	e1 f7       	brne	.-8      	; 0xd36 <main+0x20>
  // Back Light
  struct signal bl = { .ddr = &DDRB, .port = &PORTB, .pin = 1 };
 d3e:	25 e0       	ldi	r18, 0x05	; 5
 d40:	e5 e0       	ldi	r30, 0x05	; 5
 d42:	f1 e0       	ldi	r31, 0x01	; 1
 d44:	de 01       	movw	r26, r28
 d46:	16 96       	adiw	r26, 0x06	; 6
 d48:	01 90       	ld	r0, Z+
 d4a:	0d 92       	st	X+, r0
 d4c:	2a 95       	dec	r18
 d4e:	e1 f7       	brne	.-8      	; 0xd48 <main+0x32>
  // Data / Command
  struct signal dc = { .ddr = &DDRB, .port = &PORTB, .pin = 0 };
 d50:	25 e0       	ldi	r18, 0x05	; 5
 d52:	ea e0       	ldi	r30, 0x0A	; 10
 d54:	f1 e0       	ldi	r31, 0x01	; 1
 d56:	de 01       	movw	r26, r28
 d58:	1b 96       	adiw	r26, 0x0b	; 11
 d5a:	01 90       	ld	r0, Z+
 d5c:	0d 92       	st	X+, r0
 d5e:	2a 95       	dec	r18
 d60:	e1 f7       	brne	.-8      	; 0xd5a <main+0x44>
  // Reset
  struct signal rs = { .ddr = &DDRD, .port = &PORTD, .pin = 7 };
 d62:	25 e0       	ldi	r18, 0x05	; 5
 d64:	ef e0       	ldi	r30, 0x0F	; 15
 d66:	f1 e0       	ldi	r31, 0x01	; 1
 d68:	de 01       	movw	r26, r28
 d6a:	50 96       	adiw	r26, 0x10	; 16
 d6c:	01 90       	ld	r0, Z+
 d6e:	0d 92       	st	X+, r0
 d70:	2a 95       	dec	r18
 d72:	e1 f7       	brne	.-8      	; 0xd6c <main+0x56>
  // LCD struct
  struct st7735 lcd1 = { .cs = &cs, .bl = &bl, .dc = &dc, .rs = &rs };
 d74:	9e 8b       	std	Y+22, r25	; 0x16
 d76:	8d 8b       	std	Y+21, r24	; 0x15
 d78:	05 96       	adiw	r24, 0x05	; 5
 d7a:	98 8f       	std	Y+24, r25	; 0x18
 d7c:	8f 8b       	std	Y+23, r24	; 0x17
 d7e:	05 96       	adiw	r24, 0x05	; 5
 d80:	9a 8f       	std	Y+26, r25	; 0x1a
 d82:	89 8f       	std	Y+25, r24	; 0x19
 d84:	05 96       	adiw	r24, 0x05	; 5
 d86:	9c 8f       	std	Y+28, r25	; 0x1c
 d88:	8b 8f       	std	Y+27, r24	; 0x1b

  // LCD 1
  // ----------------------------------------------------------
  // init lcd 1
  ST7735_Init (&lcd1);
 d8a:	05 96       	adiw	r24, 0x05	; 5
 d8c:	0e 94 68 05 	call	0xad0	; 0xad0 <ST7735_Init>
  // clear screen
  ST7735_ClearScreen (&lcd1, BLACK);
 d90:	60 e0       	ldi	r22, 0x00	; 0
 d92:	70 e0       	ldi	r23, 0x00	; 0
 d94:	ce 01       	movw	r24, r28
 d96:	45 96       	adiw	r24, 0x15	; 21
 d98:	0e 94 1d 03 	call	0x63a	; 0x63a <ST7735_ClearScreen>
  // set position X, Y
  int response = ST7735_SetPosition (start, 35); // y was 10 
 d9c:	63 e2       	ldi	r22, 0x23	; 35
 d9e:	80 e0       	ldi	r24, 0x00	; 0
 da0:	0e 94 5f 04 	call	0x8be	; 0x8be <ST7735_SetPosition>
  if (response = ST7735_ERROR) {
	  PORTC |= (1<<5);
 da4:	88 b1       	in	r24, 0x08	; 8
 da6:	80 62       	ori	r24, 0x20	; 32
 da8:	88 b9       	out	0x08, r24	; 8
  }
  // draw string
  ST7735_DrawString (&lcd1, "Hello World", WHITE, X2); // was x2
 daa:	20 e8       	ldi	r18, 0x80	; 128
 dac:	4f ef       	ldi	r20, 0xFF	; 255
 dae:	5f ef       	ldi	r21, 0xFF	; 255
 db0:	64 e1       	ldi	r22, 0x14	; 20
 db2:	71 e0       	ldi	r23, 0x01	; 1
 db4:	ce 01       	movw	r24, r28
 db6:	45 96       	adiw	r24, 0x15	; 21
 db8:	0e 94 9d 04 	call	0x93a	; 0x93a <ST7735_DrawString>
  // draw Loading
  //for (uint8_t i = start; i < end; i++) {
    // draw rectangle
    //ST7735_DrawRectangle (&lcd1, start, i, 30, 40, RED); // was red
  //}
  ST7735_DrawSmiley (&lcd1, 130, 40, WHITE);
 dbc:	2f ef       	ldi	r18, 0xFF	; 255
 dbe:	3f ef       	ldi	r19, 0xFF	; 255
 dc0:	48 e2       	ldi	r20, 0x28	; 40
 dc2:	62 e8       	ldi	r22, 0x82	; 130
 dc4:	ce 01       	movw	r24, r28
 dc6:	45 96       	adiw	r24, 0x15	; 21
 dc8:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <ST7735_DrawSmiley>
  ST7735_DrawSad(&lcd1, 100, 40, WHITE);
 dcc:	2f ef       	ldi	r18, 0xFF	; 255
 dce:	3f ef       	ldi	r19, 0xFF	; 255
 dd0:	48 e2       	ldi	r20, 0x28	; 40
 dd2:	64 e6       	ldi	r22, 0x64	; 100
 dd4:	ce 01       	movw	r24, r28
 dd6:	45 96       	adiw	r24, 0x15	; 21
 dd8:	0e 94 03 06 	call	0xc06	; 0xc06 <ST7735_DrawSad>

  return 0;
}
 ddc:	80 e0       	ldi	r24, 0x00	; 0
 dde:	90 e0       	ldi	r25, 0x00	; 0
 de0:	6c 96       	adiw	r28, 0x1c	; 28
 de2:	0f b6       	in	r0, 0x3f	; 63
 de4:	f8 94       	cli
 de6:	de bf       	out	0x3e, r29	; 62
 de8:	0f be       	out	0x3f, r0	; 63
 dea:	cd bf       	out	0x3d, r28	; 61
 dec:	df 91       	pop	r29
 dee:	cf 91       	pop	r28
 df0:	08 95       	ret

00000df2 <_exit>:
 df2:	f8 94       	cli

00000df4 <__stop_program>:
 df4:	ff cf       	rjmp	.-2      	; 0xdf4 <__stop_program>
